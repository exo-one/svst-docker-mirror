# WARNING - Do not edit this file directly - use regen-docker-test.sh

services:
  bitcoind:
    entrypoint: sh -c 'ip a && btc_init && bitcoind -regtest'
    env_file: [env_vars.env, env_test.env]
    expose: ['8332']
    image: exo1/dev-test-bitcoind
  header-download:
    build: {context: ., dockerfile: Dockerfile.header-download}
    depends_on: [scraper]
    entrypoint: python3 ./header-download.py
    env_file: [env_vars.env, env_test.env]
  ipfs:
    depends_on: [bitcoind]
    image: jbenet/go-ipfs
    ports: ['4001:4001']
  pallet-download:
    build: {context: ., dockerfile: Dockerfile.pallet-download}
    depends_on: [scraper]
  pallet-verifier:
    build: {context: ., dockerfile: Dockerfile.pallet-verifier}
    depends_on: [scraper]
  postgres:
    build: {context: ./dockerfiles/postgres/}
    depends_on: [ipfs]
    env_file: [env_vars.env, env_test.env]
  producer:
    build: {context: ., dockerfile: Dockerfile.producer}
    depends_on: [scraper]
    entrypoint: sh -c 'git pull && ./producer-test.sh'
    env_file: [env_vars.env, env_test.env]
    environment: [VERIFY_SECRET_KEY, VERIFY_PUBKEY]
  scraper:
    build: {context: ., dockerfile: Dockerfile.scraper}
    depends_on: [postgres]
    entrypoint: scraper
  state-maker:
    build: {context: ., dockerfile: Dockerfile.state-maker}
    depends_on: [scraper]
  sut:
    build: {context: ., dockerfile: Dockerfile.test}
    depends_on: [bitcoind, postgres, scraper, state-maker]
    env_file: [env_vars.env, env_test.env]
  vote-explorer:
    build: {context: ., dockerfile: Dockerfile.vote-explorer}
    depends_on: [state-maker]
    ports: ['127.0.0.1:8683:80']
version: '2.1'
